#include <iostream>   // Para cout e cin
#include <string>     // Para usar a classe std::string
#include <algorithm>  // Para std::transform
using namespace std;

// -------------------------------
// Fun√ß√£o para transformar uma string em min√∫sculas
// Isso facilita a compara√ß√£o das respostas, tornando-a case-insensitive
string paraMinusculo(string str) {
    transform(str.begin(), str.end(), str.begin(), ::tolower);
    return str;
}

// -------------------------------
// Fun√ß√£o que l√™ a resposta do usu√°rio e verifica se est√° correta
// - Recebe a resposta correta como par√¢metro
// - Retorna true se o usu√°rio acertou, false caso contr√°rio
// - Inclui tratamento para resposta em branco
bool lerResposta(const string& correta) {
    string resposta;

    // Prompt para o usu√°rio digitar a resposta
    cout << "üëâ Sua resposta: ";
    if (!getline(cin, resposta)) { 
        // Se getline falhar (EOF ou erro), tratamos como resposta em branco
        cout << "‚ö†Ô∏è Resposta em branco. Contado como erro.\n\n";
        return false;
    }

    // Remove espa√ßos extras no in√≠cio e no fim (trim)
    size_t start = resposta.find_first_not_of(" \t");
    size_t end = resposta.find_last_not_of(" \t");
    if (start == string::npos) resposta = ""; // string s√≥ com espa√ßos
    else resposta = resposta.substr(start, end - start + 1);

    // Converte para min√∫sculas para compara√ß√£o case-insensitive
    resposta = paraMinusculo(resposta);

    // Verifica se a resposta est√° em branco
    if (resposta.empty()) {
        cout << "‚ö†Ô∏è Resposta em branco. Contado como erro.\n\n";
        return false;
    }

    // Compara a resposta do usu√°rio com a resposta correta
    if (resposta == correta) {
        cout << "‚úÖ Correto!\n\n";
        return true;
    } else {
        cout << "‚ùå Errado. Resposta correta: " << correta << "\n\n";
        return false;
    }
}

// -------------------------------
// Fun√ß√£o principal
int main() {
    int acertos = 0; // Contador de acertos do usu√°rio

    // -------------------------------
    // Perguntas do quiz
    cout << "1) Qual √© o plural de 'cidad√£o'?\n";
    if (lerResposta("cidad√£os")) acertos++; // Incrementa acertos se correto

    cout << "2) Qual palavra est√° escrita corretamente?\n";
    cout << "a) exce√ß√£o\nb) exess√£o\nc) ece√ß√£o\n";
    if (lerResposta("a")) acertos++;

    cout << "3) Qual √© a forma correta da concord√¢ncia?\n";
    cout << "a) Faltam entregar os documentos.\nb) Faltam entregar o documentos.\n";
    if (lerResposta("a")) acertos++;

    cout << "4) Identifique a fun√ß√£o da palavra 'feliz' na frase 'Ela voltou feliz'.\n";
    cout << "a) Substantivo\nb) Adjetivo\nc) Verbo\n";
    if (lerResposta("b")) acertos++;

    cout << "5) Qual alternativa apresenta uma ora√ß√£o subordinada adverbial causal?\n";
    cout << "a) Cheguei cedo para n√£o perder o √¥nibus.\n";
    cout << "b) N√£o fui √† escola porque estava doente.\n";
    cout << "c) Se chover, n√£o sairei.\n";
    if (lerResposta("b")) acertos++;

    cout << "6) Assinale a frase em que a coloca√ß√£o pronominal est√° correta:\n";
    cout << "a) Me empresta seu livro.\n";
    cout << "b) Empresta-me seu livro.\n";
    cout << "c) Seu livro me empresta.\n";
    if (lerResposta("b")) acertos++;

    cout << "7) Qual das palavras abaixo est√° acentuada corretamente?\n";
    cout << "a) Id√©ia\nb) Heroi\nc) P√¥de\n";
    if (lerResposta("c")) acertos++;

    cout << "8) Qual √© a classe gramatical da palavra 'ontem'?\n";
    cout << "a) Substantivo\nb) Adv√©rbio\nc) Adjetivo\n";
    if (lerResposta("b")) acertos++;

    cout << "9) Qual ora√ß√£o apresenta voz passiva?\n";
    cout << "a) Os alunos fizeram a tarefa.\n";
    cout << "b) A tarefa foi feita pelos alunos.\n";
    cout << "c) Eles far√£o a tarefa amanh√£.\n";
    if (lerResposta("b")) acertos++;

    cout << "10) Qual √© o sujeito da ora√ß√£o 'Choveu muito ontem'?\n";
    cout << "a) sujeito simples\nb) sujeito composto\nc) sujeito inexistente\n";
    if (lerResposta("c")) acertos++;

    // -------------------------------
    // Resultado final
    cout << "üèÅ Quiz finalizado!\n";
    cout << "Voc√™ acertou " << acertos << " de 10 perguntas.\n";

    // Operadores relacionais usados aqui:
    // == compara igualdade
    // >= compara se √© maior ou igual
    if (acertos == 10) {
        cout << "ü•á Excelente! Voc√™ gabaritou!\n";
    } else if (acertos >= 7) {
        cout << "üëè Muito bom! Voc√™ tem um bom dom√≠nio.\n";
    } else if (acertos >= 4) {
        cout << "üôÇ Regular. D√° pra melhorar.\n";
    } else {
        cout << "üòï Poucos acertos. Que tal revisar um pouco?\n";
    }

    return 0; // Fim do programa
}
